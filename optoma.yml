substitutions:
  # printername: flsun-qqsp
  # upper_printerename: QQSP
  init: 'component_Optoma::instance(id(uart_bus));'


esphome:
  name: optomaesp
  platform: ESP8266
  board: d1_mini
  includes:
    - optoma.h
   

logger:
  level: DEBUG
  esp8266_store_log_strings_in_flash: False

api:
ota:

web_server:
  port: 80

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

time:
  - platform: homeassistant
    id: homeassistant_time
  
custom_component:
  - lambda: |-
      auto c_op = ${init}
      return {c_op};


uart:
    id: uart_bus
    tx_pin: D3
    rx_pin: D4
    baud_rate: 9600

sensor:
    # Uptime sensor.
    - platform: uptime
      name: Optoma Esp Uptime
    
    # WiFi Signal sensor.
    - platform: wifi_signal
      name: Optoma Esp WiFi Signal
      update_interval: 60s
    
    - platform: custom
      lambda: |-
        auto c_op = ${init}
        return {
          c_op->sensor_lamphours,
          c_op->sensor_ispowered,
          c_op->sensor_source,
          c_op->sensor_displaymode
        };
      sensors:
        - name: "Optoma Lamp Hours"
          unit_of_measurement: "h"
          accuracy_decimals: 0
          icon: "mdi:lightbulb"
        
        - name: "Optoma Powered"
          unit_of_measurement: ""
          accuracy_decimals: 0
          icon: "mdi:power-plug"
        
        - name: "Optoma Source"
          unit_of_measurement: ""
          accuracy_decimals: 0
        
        - name: "Optoma Display mode"
          unit_of_measurement: ""
          accuracy_decimals: 0
          

button:
    # Switch to restart the ESP8266.
    - platform: restart
      name: optoma Esp Restart
    
    - platform: template
      name: "Optoma Power On"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_poweron();
    - platform: "template"
      name: "Optoma Power Off"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_poweroff();
    - platform: "template"
      name: "Optoma Source HDMI 1"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_source_hdmi1();
    - platform: "template"
      name: "Optoma Source HDMI 2"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_source_hdmi2();

    - platform: "template"
      name: "Optoma Source VGA"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_source_vga();
    - platform: "template"
      name: "Optoma Source VGA2"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_source_vga2();    
    - platform: "template"
      name: "Optoma Source Video"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_source_video();
    - platform: "template"
      name: "Optoma Logo Default"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_logo_default();
    - platform: "template"
      name: "Optoma Logo User"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_logo_user();
    - platform: "template"
      name: "Optoma Logo Neutral"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_logo_neutral();
    - platform: "template"
      name: "Optoma Logo Capture"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_logo_capture();
    - platform: "template"
      name: "Optoma Menu Up"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_menu_up();
    - platform: "template"
      name: "Optoma Menu Down"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_menu_down();
    - platform: "template"
      name: "Optoma Menu Left"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_menu_left();
    - platform: "template"
      name: "Optoma Menu Right"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_menu_right();
    - platform: "template"
      name: "Optoma Menu Enter"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_menu_enter();
    - platform: "template"
      name: "Optoma Menu Keystone plus"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_menu_keystone_plus();
    - platform: "template"
      name: "Optoma Menu Keystone minus"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_menu_keystone_minus();
    - platform: "template"
      name: "Optoma Menu Brightness"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_menu_brightness();
    - platform: "template"
      name: "Optoma Menu Contrast"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_menu_contrast();
    - platform: "template"
      name: "Optoma Menu menu"
      on_press:
        then:
          lambda: |-
            auto c_op = ${init};
            c_op->button_menu_menu();

          